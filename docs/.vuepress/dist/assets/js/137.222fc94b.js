(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{1581:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"区块链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区块链"}},[t._v("#")]),t._v(" 区块链")]),t._v(" "),s("blockquote",[s("p",[t._v("Blockchain")])]),t._v(" "),s("p",[t._v("区块链（Blockchain）是一种"),s("strong",[t._v("去中心化的分布式账本技术")]),t._v("，最初被用于比特币，现在被广泛应用于金融、供应链、身份认证、医疗等领域")]),t._v(" "),s("ul",[s("li",[t._v("Block（区块）：指的是交易数据被打包后形成的单元")]),t._v(" "),s("li",[t._v("Chain（链）：指的是这些区块按时间顺序通过加密链接在一起，形成一条链式结构")])]),t._v(" "),s("p",[t._v("区块链本质上是一个由多个“区块”"),s("strong",[t._v("按时间顺序")]),t._v("串联组成的数据结构，每个区块中记录了"),s("strong",[t._v("一组")]),t._v("交易数据，并通过密码学方法保证不可篡改")]),t._v(" "),s("ul",[s("li",[t._v("就是一个链表，只不过节点数据很特别")])]),t._v(" "),s("p",[s("strong",[t._v("每个区块中不仅包含交易数据，还包含前一个区块的哈希值（加密摘要），从而形成一个前后相连、不可逆的链式结构，一旦前面的区块内容被修改，其后的所有区块的哈希也会发生变化，因此可以有效防止数据篡改")])]),t._v(" "),s("p",[t._v("它具有以下几个核心特性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("分布式")]),t._v(" "),s("td",[t._v("数据不是集中在一个服务器上，而是存储在网络中所有节点中")])]),t._v(" "),s("tr",[s("td",[t._v("去中心化")]),t._v(" "),s("td",[t._v("不依赖任何单一机构或第三方，节点间通过共识机制达成一致")])]),t._v(" "),s("tr",[s("td",[t._v("不可篡改")]),t._v(" "),s("td",[t._v("一旦数据被记录到区块链上就无法更改")])]),t._v(" "),s("tr",[s("td",[t._v("可追溯性")]),t._v(" "),s("td",[t._v("每笔交易都有完整的时间戳和历史记录")])]),t._v(" "),s("tr",[s("td",[t._v("透明性和可验证性")]),t._v(" "),s("td",[t._v("所有节点都能验证交易的真实性和完整性")])])])]),t._v(" "),s("p",[t._v("可以将区块链比作一本多人共享的“记账本”，每一页就是一个区块，每页内容写好后都"),s("strong",[t._v("盖章封存")]),t._v("（哈希+共识机制），然后连接到前一页之后，所有人都能看到记账内容，但没人能偷偷改动过去的记录（这样将失去有效性）")]),t._v(" "),s("h3",{attrs:{id:"哈希与共识机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈希与共识机制"}},[t._v("#")]),t._v(" 哈希与共识机制")]),t._v(" "),s("p",[t._v("我们把每个"),s("strong",[t._v("区块")]),t._v("看作一本“账簿页面”")]),t._v(" "),s("ul",[s("li",[t._v("上面写着本轮的交易记录")]),t._v(" "),s("li",[t._v("为了防止事后修改，系统要给它盖章封存")])]),t._v(" "),s("p",[t._v("这个“封存”过程由两部分组成")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("组成")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("哈希（Hash）")]),t._v(" "),s("td",[t._v("用加密算法把区块“压缩”为一个唯一摘要值")]),t._v(" "),s("td",[t._v("一旦数据改动，哈希值就会改变，能立刻察觉")])]),t._v(" "),s("tr",[s("td",[t._v("共识机制（如 PoW）")]),t._v(" "),s("td",[t._v("网络中大多数节点"),s("strong",[t._v("共同同意")]),t._v("这个区块有效")]),t._v(" "),s("td",[t._v("防止恶意节点随意造假")])])])]),t._v(" "),s("p",[t._v("哈希 = 在每页账簿上盖防伪印章")]),t._v(" "),s("p",[t._v("在区块链中")]),t._v(" "),s("ul",[s("li",[t._v("每个区块都记录前一个区块的哈希值")]),t._v(" "),s("li",[t._v("区块内容一改，哈希就变，链就断了")]),t._v(" "),s("li",[t._v("这使得任何人想修改历史记录都变得几乎不可能")])]),t._v(" "),s("p",[t._v("哈希保证了“区块内部”和“区块之间”都不能被偷偷篡改，我们可以保证任意一个链的合法性，并且链上的区块可以通过摘要值保证其无法篡改")]),t._v(" "),s("p",[t._v("区块的合法性如何保证？用到共识机制")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("机制")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("工作量证明（Proof of Work）")]),t._v(" "),s("td",[t._v("比特币使用，必须算出一个符合条件的哈希（很难）")])]),t._v(" "),s("tr",[s("td",[t._v("权益证明（PoS）")]),t._v(" "),s("td",[t._v("以太坊等使用，凭“持币量”投票决策")])]),t._v(" "),s("tr",[s("td",[t._v("拜占庭容错、DPoS、PBFT 等")]),t._v(" "),s("td",[t._v("其他公链/联盟链使用")])])])]),t._v(" "),s("p",[t._v("共识 = 众人见证并盖公章，谁造假就会被识破")]),t._v(" "),s("p",[t._v("在比特币中")]),t._v(" "),s("ul",[s("li",[t._v("谁想添加新区块，必须算出一个合格哈希（挖矿）")]),t._v(" "),s("li",[t._v("这非常耗费计算力，意味着这个“封章”具有“成本”")]),t._v(" "),s("li",[t._v("网络只接受"),s("strong",[t._v("最长合法链")]),t._v("作为真正的“账本”")])]),t._v(" "),s("p",[t._v("共识机制保证了大家都接受同一个历史，不会有“分叉账本”乱象")]),t._v(" "),s("p",[t._v("区块链的安全与可信，来源于哈希算法提供的防篡改能力和共识机制提供的集体认可，这套机制就是区块链最本质的盖章封存")]),t._v(" "),s("h3",{attrs:{id:"最长合法链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最长合法链"}},[t._v("#")]),t._v(" 最长合法链")]),t._v(" "),s("p",[t._v("什么叫“最长合法链”？在比特币系统中")]),t._v(" "),s("ul",[s("li",[t._v("每一个新区块都是接在上一个合法区块后面")]),t._v(" "),s("li",[t._v("这样连接形成了一个链条，称为“区块链”")]),t._v(" "),s("li",[t._v("不同的矿工可能同时挖出不同的新块，就可能出现分叉")]),t._v(" "),s("li",[t._v("比特币规定： “ 以工作量为准，链上块最多的那条链为主链”")])]),t._v(" "),s("p",[t._v("所以，“最长合法链”意思是："),s("strong",[t._v("目前全网算力共同认定的、累计工作量最大的那条区块链")]),t._v("，即所有节点都认为是“正统”的链，即唯一的"),s("strong",[t._v("账本")])]),t._v(" "),s("p",[t._v("为什么叫“最长”？这指的是什么长度？不是指字节数或块个数，而是指“累积的工作量（难度）")]),t._v(" "),s("ul",[s("li",[t._v("在比特币中，每个区块都必须经过挖矿计算（工作量证明，PoW）")]),t._v(" "),s("li",[t._v("你挖得越多、链越长，就代表你为这条链投入了更多计算资源")]),t._v(" "),s("li",[t._v("网络规定：谁的链累积的工作量最多，谁的链就被视为“主链”")]),t._v(" "),s("li",[t._v("这通常表现为块数最多的一条链，因为每个块的难度是固定的")])]),t._v(" "),s("p",[t._v("举个例子，假设区块链已经走到第 100 个区块，某一时刻，两个矿工同时挖出了第 101 块，分别叫"),s("code",[t._v("101A")]),t._v("和"),s("code",[t._v("101B")]),t._v("，网络产生了“短暂分叉”")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("... → 100 → 101A  \n          ↘︎ 101B\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("此时，有的节点收到"),s("code",[t._v("101A")]),t._v("，有的收到"),s("code",[t._v("101B")]),t._v("，网络短暂不一致，假如接下来矿工 C 在"),s("code",[t._v("101A")]),t._v("的基础上成功挖出"),s("code",[t._v("102A")]),t._v("，链就变成")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("... → 100 → 101A → 102A  \n          ↘︎ 101B\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("这时，“A链”更长了，大多数节点就会选择它，那么最长合法链 = ... → 100 → 101A → 102A")]),t._v(" "),s("p",[t._v("而"),s("code",[t._v("101B")]),t._v("和其交易就会被丢弃，称为“孤块（orphan block）”")]),t._v(" "),s("ul",[s("li",[t._v("需要注意的是，"),s("code",[t._v("101B")]),t._v("本身是一个合法的区块（他正确引用了上一个区块 100 的哈希并且工作量证明 PoW 达标），但是不是一个合法的比特币，因为这笔帐被主链抛弃了")])]),t._v(" "),s("p",[t._v("最长合法链解决了什么问题？它是去中心化世界中解决冲突、达成共识的方式")]),t._v(" "),s("ul",[s("li",[t._v("没有中央服务器说了算")]),t._v(" "),s("li",[t._v("所有节点都用相同规则判断哪条链是主链")]),t._v(" "),s("li",[t._v("就算发生了分叉，大家也知道： “我们跟着最长合法链走”，这就避免了混乱")])]),t._v(" "),s("h2",{attrs:{id:"比特币"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比特币"}},[t._v("#")]),t._v(" 比特币")]),t._v(" "),s("blockquote",[s("p",[t._v("Bitcoin")])]),t._v(" "),s("p",[t._v("比特币（Bitcoin）是"),s("strong",[t._v("第一个")]),t._v("真正实现的区块链应用，它是一种去中心化的"),s("strong",[t._v("数字加密货币")]),t._v("，由中本聪（Satoshi Nakamoto）在 2008 年提出，2009 年正式发布")]),t._v(" "),s("h3",{attrs:{id:"区块链应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区块链应用"}},[t._v("#")]),t._v(" 区块链应用")]),t._v(" "),s("p",[t._v("1️⃣ 交易打包成区块")]),t._v(" "),s("ul",[s("li",[t._v("用户发起交易（例如 A 给 B 转 1 个比特币）")]),t._v(" "),s("li",[t._v("网络节点广播这笔交易")]),t._v(" "),s("li",[t._v("“矿工”收集一批交易并打包成一个区块（block）")])]),t._v(" "),s("p",[t._v("2️⃣ 工作量证明（PoW）机制：挖矿")]),t._v(" "),s("ul",[s("li",[t._v("为了添加这个新区块，矿工必须完成一个复杂的数学难题（找一个满足条件的哈希值）")]),t._v(" "),s("li",[t._v("这个过程称为“挖矿”，谁先解出问题，谁就能把区块加到区块链上，并获得"),s("strong",[t._v("比特币奖励")])])]),t._v(" "),s("p",[t._v("3️⃣ 区块链接成链")]),t._v(" "),s("ul",[s("li",[t._v("每个新区块中记录上一个区块的哈希值")]),t._v(" "),s("li",[t._v("形成一个"),s("strong",[t._v("不可篡改的链式结构")]),t._v(" —— 区块链")]),t._v(" "),s("li",[t._v("一旦区块被添加，其内部数据几乎无法更改，因为更改一个区块将破坏整个后续链条的哈希")])]),t._v(" "),s("p",[t._v("4️⃣ 全网共识")]),t._v(" "),s("ul",[s("li",[t._v("所有节点都验证新区块是否合法（是否遵循规则、是否有双重支付等）")]),t._v(" "),s("li",[t._v("一致接受后，这个区块就被"),s("strong",[t._v("永久记录")])])]),t._v(" "),s("h3",{attrs:{id:"比特币-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比特币-2"}},[t._v("#")]),t._v(" 比特币")]),t._v(" "),s("p",[t._v("所以比特币到底是什么，是一串哈希吗？可以理解为一个私钥，谁拥有比特币，将拥有“私钥控制某个地址”的能力，以此来证明拥有比特币")]),t._v(" "),s("p",[t._v("虽然比特币不是“哈希值”，但哈希算法在整个系统里大量使用，关键位置包括")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("用途")]),t._v(" "),s("th",[t._v("内容")]),t._v(" "),s("th",[t._v("哈希算法")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("区块链结构")]),t._v(" "),s("td",[t._v("每个区块有一个哈希值，指向上一个区块")]),t._v(" "),s("td",[t._v("SHA-256")])]),t._v(" "),s("tr",[s("td",[t._v("挖矿过程")]),t._v(" "),s("td",[t._v("通过不断尝试不同 nonce，找出符合难度的哈希")]),t._v(" "),s("td",[t._v("SHA-256 x2")])]),t._v(" "),s("tr",[s("td",[t._v("地址生成")]),t._v(" "),s("td",[t._v("比特币地址是从公钥哈希计算出来的")]),t._v(" "),s("td",[t._v("RIPEMD-160（SHA-256 pk）")])]),t._v(" "),s("tr",[s("td",[t._v("交易 ID")]),t._v(" "),s("td",[t._v("每笔交易也有一个唯一的哈希值（txid）")]),t._v(" "),s("td",[t._v("SHA-256 x2")])])])]),t._v(" "),s("p",[t._v("可以发现全是哈希，没有所谓的加密")]),t._v(" "),s("p",[t._v("当拥有 1 个比特币，其实")]),t._v(" "),s("ul",[s("li",[t._v("你有一个私钥，对应一个地址")]),t._v(" "),s("li",[t._v("区块链账本里记录了一个或多个“未花费的输出”，指向这个地址，总金额为 1 BTC")]),t._v(" "),s("li",[t._v("当你转账时，系统检查这些 UTXO，再生成新的交易，把这些比特币“花掉”")])]),t._v(" "),s("h3",{attrs:{id:"双重支付"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双重支付"}},[t._v("#")]),t._v(" 双重支付")]),t._v(" "),s("p",[t._v("“双重支付”（Double Spending）是区块链和加密货币中最关键、也最需要防范的问题之一，它指的是：同一笔加密货币被恶意地用于多次支付，类似于"),s("strong",[t._v("一笔钱花两次")])]),t._v(" "),s("p",[t._v("双重支付在比特币中的形式，假设你有 1 BTC，试图这样操作")]),t._v(" "),s("ul",[s("li",[t._v("把这 1 BTC 支付给商家 A")]),t._v(" "),s("li",[t._v("同时将另一笔交易广播出去，把同样的 1 BTC 支付给你的另一个地址 B")]),t._v(" "),s("li",[t._v("如果你能让“支付给 B 的交易”被矿工先打包进区块链中，那么你就“收回”了那笔钱，A 就被骗了")])]),t._v(" "),s("p",[t._v("这就叫“双花”")]),t._v(" "),s("p",[t._v("比特币用以下机制来防御双花攻击")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("防御机制")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("✅ 区块链结构")]),t._v(" "),s("td",[t._v("所有交易都要被打包进"),s("strong",[t._v("单一主链（最长合法链）")]),t._v("，且不可更改")])]),t._v(" "),s("tr",[s("td",[t._v("⛏️ 工作量证明（PoW）")]),t._v(" "),s("td",[t._v("想“抢跑”插入伪造交易，需要极高算力才能制造“更长链”")])]),t._v(" "),s("tr",[s("td",[t._v("⏱️ 等待多个确认")]),t._v(" "),s("td",[t._v("商家会等"),s("strong",[t._v("6个区块确认")]),t._v("才认为交易不可逆")])]),t._v(" "),s("tr",[s("td",[t._v("🌐 去中心化")]),t._v(" "),s("td",[t._v("网络中成千上万节点共同验证、同步，攻击难度非常高")])])])]),t._v(" "),s("p",[t._v("为什么双重支付难以实现？")]),t._v(" "),s("ul",[s("li",[t._v("要双花成功，你得"),s("strong",[t._v("控制超过全网一半的算力")]),t._v("（所谓 51% 攻击）")]),t._v(" "),s("li",[t._v("即使你广播了两笔冲突交易，矿工只会打包其中"),s("strong",[t._v("一笔")])]),t._v(" "),s("li",[t._v("其他那一笔会被网络判定为“双花交易”，直接丢弃")])]),t._v(" "),s("h3",{attrs:{id:"减半机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#减半机制"}},[t._v("#")]),t._v(" 减半机制")]),t._v(" "),s("p",[t._v("比特币的“减半机制”是其最重要的货币发行机制之一，它是比特币"),s("strong",[t._v("通缩模型")]),t._v("的核心")]),t._v(" "),s("ul",[s("li",[t._v("比特币减半机制是指：每当网络挖出 210000 个区块（大约每 4 年），挖矿所得的比特币奖励就会减少一半，直到总发行量接近 2100 万个比特币为止")])]),t._v(" "),s("p",[t._v("🎯 为什么要减半？")]),t._v(" "),s("p",[t._v("控制总量")]),t._v(" "),s("ul",[s("li",[t._v("比特币的最大供应量为 2100万枚")]),t._v(" "),s("li",[t._v("如果不减半，发行会无限制增发")]),t._v(" "),s("li",[t._v("减半机制让发行量逐渐趋近于 2100 万")])]),t._v(" "),s("p",[t._v("模拟黄金的稀缺性")]),t._v(" "),s("ul",[s("li",[t._v("像黄金一样，越挖越少，越来越难得")]),t._v(" "),s("li",[t._v("形成“数字黄金”的价值逻辑")])]),t._v(" "),s("p",[t._v("抑制通货膨胀")]),t._v(" "),s("ul",[s("li",[t._v("减少供应速度，保证稀缺")]),t._v(" "),s("li",[t._v("吸引长期投资者，形成稳定预期")])]),t._v(" "),s("p",[t._v("减半的经济效应")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("影响因素")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("🎯 矿工收入减少")]),t._v(" "),s("td",[t._v("如果币价不涨，矿工收益会缩水一半")])]),t._v(" "),s("tr",[s("td",[t._v("🚀 币价有上涨预期")]),t._v(" "),s("td",[t._v("因为供应减少，而需求可能稳定甚至上升")])]),t._v(" "),s("tr",[s("td",[t._v("🧠 市场投机波动")]),t._v(" "),s("td",[t._v("减半前后往往伴随价格剧烈波动")])]),t._v(" "),s("tr",[s("td",[t._v("💡 挖矿难度调整")]),t._v(" "),s("td",[t._v("有些矿工退出后，全网难度会自动调整以维持出块速度")])])])]),t._v(" "),s("p",[t._v("这其实是一个经济学问题，而并非密码学范畴，"),s("strong",[t._v("减半事件是写死在比特币代码里的（Bitcoin Core），无法人为更改")])]),t._v(" "),s("p",[t._v("比特币减半机制是比特币每4年减产一半的系统规则，旨在模拟稀缺性、控制总量、增强长期价值，它是比特币“通缩”特性和“数字黄金”地位的根本来源")]),t._v(" "),s("h2",{attrs:{id:"简单的矿工"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单的矿工"}},[t._v("#")]),t._v(" 简单的矿工")]),t._v(" "),s("p",[t._v("SimpleMiner：其实就是一个 SHA-256 哈希，什么加密也没有")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleMiner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将任意字符串进行 SHA-256 哈希")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sha256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageDigest")]),t._v(" digest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageDigest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SHA-256"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" hashBytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" digest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("digest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StandardCharsets")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF_8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将字节数组转换为十六进制字符串")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),t._v(" hexString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" hashBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" hex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toHexString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" hexString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            hexString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hexString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" blockData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" difficulty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nonce "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" startTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要求哈希值的前缀有 difficulty 个 0，才满足要求")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" targetPrefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("difficulty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// blockData 是假设的区块内容")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" blockData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nonce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sha256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetPrefix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"找到符合条件的 nonce: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nonce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"对应哈希值: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nonce"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nonce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hash"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            nonce"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" endTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"耗时: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("endTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" startTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ms"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time_cost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("startTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleMiner")]),t._v(" miner "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleMiner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" miner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alice trade 10 btc to Bob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br")])]),s("p",[t._v("输入"),s("code",[t._v('{"Alice trade 10 btc to Bob", 5}')]),t._v("，输出")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("找到符合条件的 nonce: 1155772\n对应哈希值: 00000a65e3e876194ca42b6663680bdd12dd6c0046b528e0cd4f1f19cb32d5d0\n耗时: 1468 ms\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);