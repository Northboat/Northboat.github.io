(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{1498:function(t,a,v){"use strict";v.r(a);var _=v(5),Q=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("控制器和运算器，五星重点，408最难的一部分，出过三种大题")]),t._v(" "),a("ul",[a("li",[t._v("CPU 功能和指令执行")]),t._v(" "),a("li",[t._v("控制器的设计和工作原理")]),t._v(" "),a("li",[t._v("指令流水线")])]),t._v(" "),a("h2",{attrs:{id:"cpu-的功能和组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-的功能和组成"}},[t._v("#")]),t._v(" CPU 的功能和组成")]),t._v(" "),a("h3",{attrs:{id:"cpu-的组成和结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-的组成和结构"}},[t._v("#")]),t._v(" CPU 的组成和结构")]),t._v(" "),a("p",[t._v("冯诺依曼结构中，数据和指令均用二进制表示并按序依次存放在存储器中，计算机分为运算器、控制器、存储器、输入设备和输出设备五大部件，其中运算器和控制器合为中央控制其，即 CPU")]),t._v(" "),a("p",[t._v("CPU 包括算术逻辑单元 ALU、控制单元 CU、寄存器以及中断系统，与控制总线、数据总线、地址总线相连")]),t._v(" "),a("ul",[a("li",[t._v("ALU 实现算术运算、逻辑运算")]),t._v(" "),a("li",[t._v("CU 作为控制器，协调取数据、分析、读内存等工作，由程序计数器 PC、指令寄存器 IR、指令译码器 ID、时序产生器和操作控制器等组成")])]),t._v(" "),a("h3",{attrs:{id:"cpu-中的寄存器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-中的寄存器"}},[t._v("#")]),t._v(" CPU 中的寄存器")]),t._v(" "),a("p",[t._v("分为专用寄存器和通用寄存器")]),t._v(" "),a("ul",[a("li",[t._v("专用寄存器：程序计数器、指令寄存器、指令译码器、存储器数据寄存器、存储器地址寄存器")]),t._v(" "),a("li",[t._v("通用寄存器：数据寄存器、地址寄存器、通用寄存器")])]),t._v(" "),a("h4",{attrs:{id:"专用寄存器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#专用寄存器"}},[t._v("#")]),t._v(" 专用寄存器")]),t._v(" "),a("p",[t._v("程序计数器 PC，也叫指令计数器，对指令条数进行计数")]),t._v(" "),a("p",[t._v("存放下一条将要执行的指令地址。执行指令时，CPU 会自动递增 PC 的内容，使其始终指向下一条指令；执行指令前，内存必须把第一条指令的首地址发送给 PC")]),t._v(" "),a("p",[t._v("有两种递增 PC 内容的途径：顺序执行和通过转移指令")]),t._v(" "),a("ul",[a("li",[t._v("顺序执行：即令 PC 地址加 1，PC = (PC) + 1，这里的 1 指的是一个指令的长度，单位为字，如一条指令 32 位，以字节（8bit）编码，那么每次就要"),a("strong",[t._v("加一个指令的字数")]),t._v("，即 4 个字（指令字长 / 编址单位）")]),t._v(" "),a("li",[t._v("转移指令：即通过转移指令形成新地址再送往程序计数器，作为下一指令地址，PC = (PC) +1 + A，加的是 (1+A) 个指令的字数")])]),t._v(" "),a("p",[t._v("如以下栗子，指令字长为 16 位，由于按字节编址，即长为 2 个字，所以 PC 要加 2")]),t._v(" "),a("img",{attrs:{src:v(635)}}),t._v(" "),a("p",[t._v("两个特点：任何程序要执行，必须把地址发给 PC；汇编语言可以直接对 PC 进行操作")]),t._v(" "),a("p",[t._v("指令寄存器：保存当前正在执行的指令。为了防止指令执行一半时指令发生变化，用指令寄存器 IR 保存当前正在执行的指令，执行指令的过程中，其内容不允许发生变化")]),t._v(" "),a("p",[t._v("指令译码器：分析指令的操作码字段")]),t._v(" "),a("p",[t._v("存储器数据寄存器：MDR，memory data register，用于暂存内存中读出的数据，存储字长")]),t._v(" "),a("p",[t._v("存储器地址寄存器：MAR，memory address register，用于保存当前 CPU 所访问的主存单元的地址")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("寄存器")]),t._v(" "),a("th",[t._v("存放内容")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("PC")]),t._v(" "),a("td",[t._v("下一条指令地址")])]),t._v(" "),a("tr",[a("td",[t._v("IR")]),t._v(" "),a("td",[t._v("当前指令本身")])]),t._v(" "),a("tr",[a("td",[t._v("MDR")]),t._v(" "),a("td",[t._v("进出内存的数据")])]),t._v(" "),a("tr",[a("td",[t._v("MAR")]),t._v(" "),a("td",[t._v("进出内存的地址")])])])]),t._v(" "),a("p",[t._v("PC 位数等于 MAR，指令最终是要从内存中读出，也就是说 PC 中的地址在下一步是要取出的，取出则会放到 MAR 中，这就要求 MAR 的位数要大于等于 PC，否则放不下")]),t._v(" "),a("p",[t._v("IR 位数等于 MDR，与上同理，从内存中读出的指令（冯说，指令就是数据）始终要放在 IR 中的，所以 IR 大小必须大于等于 MDR")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("寄存器")]),t._v(" "),a("th",[t._v("大小")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("PC")]),t._v(" "),a("td",[t._v("log2 (指令条数) = log2 (内存大小/指令字长)")])]),t._v(" "),a("tr",[a("td",[t._v("IR")]),t._v(" "),a("td",[t._v("指令字长，指令长度位数")])]),t._v(" "),a("tr",[a("td",[t._v("MDR")]),t._v(" "),a("td",[t._v("存储字长，就是字长位数")])]),t._v(" "),a("tr",[a("td",[t._v("MAR")]),t._v(" "),a("td",[t._v("log2 (内存块数) = log2 (内存大小/编码方式)")])])])]),t._v(" "),a("p",[t._v("假设内存 4GB，按字节编码，指令字长 4B，则")]),t._v(" "),a("ul",[a("li",[t._v("IR = 32 位")]),t._v(" "),a("li",[t._v("MDR = 8 位")]),t._v(" "),a("li",[t._v("MAR = log2 (4GB/1B) = log2 (4G) = 32 位")]),t._v(" "),a("li",[t._v("PC = log2 (4GB/4B) = 30 位")])]),t._v(" "),a("p",[t._v("这里的指令条数都是考虑的最大情况，即内存中只装指令只能装这么多条，最多就这么多条，PC 不可能超出，MAR 同理，内存中只装数据块，最多这么多块")]),t._v(" "),a("p",[t._v("状态标志寄存器")]),t._v(" "),a("ul",[a("li",[t._v("溢出和进/借位就是两种典型的状态标志；还有一种叫做控制标记：如中断标志、陷阱标志")]),t._v(" "),a("li",[t._v("条件转移指令执行时依据的条件来自于"),a("strong",[t._v("标志寄存器")])])]),t._v(" "),a("p",[t._v("常用的几种标志")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("标志")]),t._v(" "),a("th",[t._v("1")]),t._v(" "),a("th",[t._v("0")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Z（zero）")]),t._v(" "),a("td",[t._v("为零")]),t._v(" "),a("td",[t._v("非零")])]),t._v(" "),a("tr",[a("td",[t._v("C（进位）")]),t._v(" "),a("td",[t._v("有进/借位")]),t._v(" "),a("td",[t._v("无进位")])]),t._v(" "),a("tr",[a("td",[t._v("V（overflow位）")]),t._v(" "),a("td",[t._v("有溢出")]),t._v(" "),a("td",[t._v("无溢出")])]),t._v(" "),a("tr",[a("td",[t._v("N（符号位）")]),t._v(" "),a("td",[t._v("正")]),t._v(" "),a("td",[t._v("负")])])])]),t._v(" "),a("p",[t._v("各专用寄存器对程序员的可见性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("寄存器\\程序员")]),t._v(" "),a("th",[t._v("系统程序员")]),t._v(" "),a("th",[t._v("应用程序员")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("PC")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("MDR")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("MAR")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("IR")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("PSWR（状态）")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("PSWR（控制）")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("通用寄存器")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("1")])])])]),t._v(" "),a("p",[t._v("只有 PC 和 PSWR 的状态标记对系统程序员可见，其余均透明")]),t._v(" "),a("p",[t._v("数据缓冲寄存器 DR：缓冲从内存中读出的数据，提高系统性能")]),t._v(" "),a("p",[t._v("地址缓冲寄存器 AR：存放地址缓冲")]),t._v(" "),a("h4",{attrs:{id:"通用寄存器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用寄存器"}},[t._v("#")]),t._v(" 通用寄存器")]),t._v(" "),a("p",[t._v("传送和暂存数据，也可以参与算术逻辑运算，通用寄存器均可见，即所有程序员均可以直接操纵通用寄存器")]),t._v(" "),a("h2",{attrs:{id:"cpu-的功能和数据通路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-的功能和数据通路"}},[t._v("#")]),t._v(" CPU 的功能和数据通路")]),t._v(" "),a("h3",{attrs:{id:"cpu-功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-功能"}},[t._v("#")]),t._v(" CPU 功能")]),t._v(" "),a("p",[t._v("控制和运算功能")]),t._v(" "),a("ul",[a("li",[t._v("取指令：控制功能之一")]),t._v(" "),a("li",[t._v("指令移码")]),t._v(" "),a("li",[t._v("控制指令执行")]),t._v(" "),a("li",[t._v("控制输入输出")]),t._v(" "),a("li",[t._v("异常处理")]),t._v(" "),a("li",[t._v("完成算术运算和逻辑运算")])]),t._v(" "),a("p",[t._v("CPU 功能概括为指令控制、操作控制、时间控制、数据加工和中断处理")]),t._v(" "),a("h3",{attrs:{id:"cpu-中的数据通路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-中的数据通路"}},[t._v("#")]),t._v(" CPU 中的数据通路")]),t._v(" "),a("p",[t._v("数据如何在 CPU、内存之间流通的？")]),t._v(" "),a("img",{attrs:{src:v(636)}}),t._v(" "),a("p",[t._v("其中，各部件在不同题目中")]),t._v(" "),a("ul",[a("li",[t._v("不变的：IR（存放当前指令）、PC、ALU、CU、MAR、M")]),t._v(" "),a("li",[t._v("变的\n"),a("ul",[a("li",[t._v("名称\n"),a("ul",[a("li",[t._v("Z 也叫 ACC，累加器")]),t._v(" "),a("li",[t._v("Y，暂存器")])])]),t._v(" "),a("li",[t._v("数量：通用寄存器数量可能改变，但功能相同")]),t._v(" "),a("li",[t._v("作图方式：旋转跳跃")])])])]),t._v(" "),a("p",[t._v("CPU 内部总线连接地址、数据总线和主存交互")]),t._v(" "),a("p",[t._v("指令周期：指令从取出到执行完成所需时间")]),t._v(" "),a("p",[t._v("机器周期：指令周期分为很多个阶段，每个阶段都叫一个机器周期，一个指令周期包含若干机器周期，一个机器周期包含若干时钟周期")]),t._v(" "),a("p",[t._v("取指周期：取指令过程，前三步即"),a("strong",[t._v("读内存")])]),t._v(" "),a("ul",[a("li",[t._v("(PC) ——> MAR， 将 PC 指令地址通过地址总线发给 MAR，存于 MAR 中")]),t._v(" "),a("li",[t._v("1 ——> R，CU 向存储器发一个读信号")]),t._v(" "),a("li",[t._v("M(MAR) ——> MDR，将内存中 MAR 位置的数据读入 MDR")]),t._v(" "),a("li",[t._v("(MDR) ——> IR，将指令调入 IR")]),t._v(" "),a("li",[t._v("OP(IR) ——> CU，分析操作码")]),t._v(" "),a("li",[t._v("(PC) + 1 ——> PC，计数器加一")])]),t._v(" "),a("p",[t._v("间址周期：间址寻址过程")]),t._v(" "),a("ul",[a("li",[t._v("Ad(IR) ——> MAR，将指令中的地址发到 MAR 中")]),t._v(" "),a("li",[t._v("1 ——> R，CU 发送读指令")]),t._v(" "),a("li",[t._v("M(MAR) ——> MDR，将数据读入 MDR")]),t._v(" "),a("li",[t._v("(MDR) ——> Ad(IR)，MDR 中的数据发给 Ad(IR)")])]),t._v(" "),a("p",[t._v("加法周期 ADD X：但地址码默认另一数据在 ACC 中")]),t._v(" "),a("ul",[a("li",[t._v("Ad(IR) ——> MAR")]),t._v(" "),a("li",[t._v("1 ——> R")]),t._v(" "),a("li",[t._v("M(MAR) ——> MDR")]),t._v(" "),a("li",[t._v("(MDR) + (ACC) ——> (ACC)")])]),t._v(" "),a("p",[t._v("存数周期 STA X：存放数据")]),t._v(" "),a("ul",[a("li",[t._v("Ad(IR) ——> MAR，Ad(IR) 就是 X")]),t._v(" "),a("li",[t._v("1 ——> W")]),t._v(" "),a("li",[t._v("(ACC) ——> MDR")]),t._v(" "),a("li",[t._v("(MDR) ——> M(MAR)")])]),t._v(" "),a("p",[t._v("取数指令 LDA X：取出数据")]),t._v(" "),a("ul",[a("li",[t._v("Ad(IR) ——> MAR，Ad(IR) 就是 X")]),t._v(" "),a("li",[t._v("1 ——> R")]),t._v(" "),a("li",[t._v("M(MAR) ——> MDR")]),t._v(" "),a("li",[t._v("(MDR) ——> (ACC)")])]),t._v(" "),a("p",[t._v("转移指令")]),t._v(" "),a("ul",[a("li",[t._v("无条件转移指令：JMX X")]),t._v(" "),a("li",[t._v("有条件转移 BAN X")])]),t._v(" "),a("p",[t._v("中断指令：实际上就是保存 PC")]),t._v(" "),a("ul",[a("li",[t._v("程序断电存入 “0” 地址")]),t._v(" "),a("li",[t._v("程序断电进栈")])]),t._v(" "),a("p",[t._v("以上周期和指令都是要背下来的噢（除了中断），在实际题目中不会蠢默写：第一步一定是取值；第二步确定指令功能，确认如何取数（运算方式）、如何运算；第三步根据题目开始默写上述内容")]),t._v(" "),a("img",{attrs:{src:v(637)}}),t._v(" "),a("p",[t._v("实现 (R0) + ((R1))，并将结果写入 (R1)")]),t._v(" "),a("img",{attrs:{src:v(638)}}),t._v(" "),a("p",[t._v("并行执行：要求线路和部件没有任何的交际")]),t._v(" "),a("p",[t._v("注意，取指令操作是控制器自动进行的，是控制器固有的 功能，无需在操作码控制下完成")]),t._v(" "),a("p",[t._v("这是一定的，如果取指令这一指令依赖于指令，那如何去取“取指令”的指令，就像操作系统的第一条指令（boot）是由硬件触发的")]),t._v(" "),a("p",[t._v("关于时钟信号")]),t._v(" "),a("ul",[a("li",[t._v("节拍 == 脉冲 == 时钟周期")]),t._v(" "),a("li",[t._v("每个指令的节拍固定，即 CPI（执行一个指令所化时钟周期数），计算机严格按照 CPI 掐断指令，进行分割")])]),t._v(" "),a("p",[t._v("栗子二")]),t._v(" "),a("img",{attrs:{src:v(639)}}),t._v(" "),a("p",[t._v("他写的有点问题，R1 为寄存器寻址，R2 为寄存器间接寻址，最后将运算结果送入 R1")]),t._v(" "),a("h2",{attrs:{id:"cpu-的设计原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-的设计原理"}},[t._v("#")]),t._v(" CPU 的设计原理")]),t._v(" "),a("h3",{attrs:{id:"cpu-的控制方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu-的控制方式"}},[t._v("#")]),t._v(" CPU 的控制方式")]),t._v(" "),a("p",[t._v("同步控制方式：选取部件中最长的操作时间作为统一的时间间隔标准，即所有控制信号按这一间隔发出，实现同步控制，这样会产生空闲时间，降低效率")]),t._v(" "),a("p",[t._v("异步控制方式：每个指令、每个微操作需要多少时间就占用多少时间，没有统一的信号控制，通过应答信号实现，即每次完成操作后发回“结束”信号告知完成")]),t._v(" "),a("p",[t._v("联合控制方式：也叫混合控制方式，大多数计算机采用该种方式。同步异步相结合，很多操作按照异步进行，在少数关键点（CPU 内部时序）采用同步方式")]),t._v(" "),a("h3",{attrs:{id:"微程序控制器原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微程序控制器原理"}},[t._v("#")]),t._v(" 微程序控制器原理")]),t._v(" "),a("p",[t._v("微程序设计技术：利用软件方法来设计硬件的一门技术")]),t._v(" "),a("ul",[a("li",[t._v("每个指令对应一个微程序，每个微程序由微指令构成")]),t._v(" "),a("li",[t._v("所有指令所对应的微程序放在一个只读存储器中，叫做控存（控制存储器），每个指令执行时，去执行其对应的微程序，逐条读出微指令，放入微指令寄存器，译码产生微命令，控制各步执行")]),t._v(" "),a("li",[t._v("采用微程序控制方法的控制器称为微程序控制器，微命令不是由组合逻辑电路产生，而是由微指令译码产生")])]),t._v(" "),a("img",{attrs:{src:v(640)}}),t._v(" "),a("p",[t._v("关于微程序控制器的基本术语")]),t._v(" "),a("ul",[a("li",[t._v("相容性微操作：可并行执行的微操作")]),t._v(" "),a("li",[t._v("相斥性微操作")]),t._v(" "),a("li",[t._v("微地址：微指令在控存中的地址")]),t._v(" "),a("li",[t._v("微地址寄存器 CMAR：存放微地址字段的寄存器")]),t._v(" "),a("li",[t._v("微命令寄存器 CMDR：微程序控制器中的寄存器")])]),t._v(" "),a("p",[t._v("微程序控制器基本原理：机器指令映射微程序")]),t._v(" "),a("ul",[a("li",[t._v("每条机器指令对应一个微程序")]),t._v(" "),a("li",[t._v("取值指令是相同，于是将取值指令同一编制成一个取值微程序，作为公共使用，同理还有间址指令、中断指令")]),t._v(" "),a("li",[t._v("因为取值指令公共，101 种操作对应存放了 102 个微程序；若没有 102，则将间址和中断也考虑进去，得 104 个微程序？")])]),t._v(" "),a("p",[t._v("微程序控制器基本结构")]),t._v(" "),a("ul",[a("li",[t._v("控存是核心部件，属于 ROM（只读内存），按地址访问")]),t._v(" "),a("li",[t._v("CMAR 控存地址寄存器，存放微指令地址")]),t._v(" "),a("li",[t._v("CMDR 控存数据寄存器，存放读出的微指令")])]),t._v(" "),a("p",[t._v("微指令序列地址的形成方式：即如何寻址")]),t._v(" "),a("ul",[a("li",[t._v("断定法：由微指令的下地址字段指出")]),t._v(" "),a("li",[t._v("机器指令的操作码形成")]),t._v(" "),a("li",[t._v("增量法：CMAR+1 ——> CMAR")]),t._v(" "),a("li",[t._v("网络测试形成")]),t._v(" "),a("li",[t._v("由硬件产生")])]),t._v(" "),a("p",[t._v("微程序控制器工作过程")]),t._v(" "),a("ul",[a("li",[t._v("取机器指令：将机器指令送入指令寄存器")]),t._v(" "),a("li",[t._v("转微程序入口：指令操作码部分送入微地址形成电路，形成微程序入口，将微程序入口送入微地址寄存器，将微地址送入控存，从控存中找到微程序起始地址，将首条微指令送入微指令寄存器中")]),t._v(" "),a("li",[t._v("执行首条微指令：将控存地址寄存器微命令字段送入译码器，得到相应微命令并执行")]),t._v(" "),a("li",[t._v("取后续微命令：微地址形成电路 ——> 从控存取微命令 ——> 执行")])]),t._v(" "),a("h3",{attrs:{id:"微程序控制器设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微程序控制器设计"}},[t._v("#")]),t._v(" 微程序控制器设计")]),t._v(" "),a("p",[t._v("微指令的设计（编码 / 控制方式）：操作控制字段 + 下地址字段")]),t._v(" "),a("p",[t._v("直接编码方式")]),t._v(" "),a("ul",[a("li",[t._v("操作控制字段中一位对应一个微命令，控制字段长度为微命令个数，1 表示打开某控制门，0 表示禁止")]),t._v(" "),a("li",[t._v("每位表示一个命令，固定如此，如 000 表示连续三个命令全禁止")])]),t._v(" "),a("p",[t._v("字段直接编码方法")]),t._v(" "),a("ul",[a("li",[t._v("对操作控制字段进行分段，每一段含互斥的微命令，同时还有一位有效位表示字段字否有效")]),t._v(" "),a("li",[t._v("因为字段内微命令互斥，所以可以进行编码，即 000 表示命令 1，001 表示命令 2，这样能够大大减小内存开销")])]),t._v(" "),a("p",[t._v("字段间接编址方式：某些段的输出依赖于某些段的输出")]),t._v(" "),a("p",[t._v("控存的大小：如为 512x40 位，即表示有 512 条微指令，每条 40 位")]),t._v(" "),a("p",[t._v("水平型微指令和垂直性微指令")]),t._v(" "),a("ul",[a("li",[t._v("水平性并行性较好，执行时间较短")]),t._v(" "),a("li",[t._v("垂直型由微操作码规定微指令功能")])]),t._v(" "),a("p",[t._v("栗子一：直接编码方法设计微指令格式")]),t._v(" "),a("img",{attrs:{src:v(641)}}),t._v(" "),a("p",[t._v("栗子二：字段直接编码方式设计微指令格式")]),t._v(" "),a("img",{attrs:{src:v(642)}}),t._v(" "),a("h3",{attrs:{id:"组合逻辑控制器的原理和设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合逻辑控制器的原理和设计"}},[t._v("#")]),t._v(" 组合逻辑控制器的原理和设计")]),t._v(" "),a("p",[t._v("由门电路和触发器构成的树型网络组成，组合逻辑也叫硬布线控制器，更快，但不易修改；微指令控制器易修改，易扩展")]),t._v(" "),a("h2",{attrs:{id:"指令流水线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令流水线"}},[t._v("#")]),t._v(" 指令流水线")]),t._v(" "),a("h3",{attrs:{id:"指令执行方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令执行方案"}},[t._v("#")]),t._v(" 指令执行方案")]),t._v(" "),a("p",[t._v("一个指令周期分为很多步骤，如取值、分析、执行等，很多时候他们串行执行，但出于性能和硬件成本考虑，我们希望他们并行运行")]),t._v(" "),a("p",[t._v("指令之间可以并行执行的方案称为"),a("strong",[t._v("流水线方案")]),t._v("，每个人只做其中一步，在操作上并行")]),t._v(" "),a("h3",{attrs:{id:"指令流水线-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令流水线-2"}},[t._v("#")]),t._v(" 指令流水线")]),t._v(" "),a("p",[t._v("我们将一条指令分为取值、分析、执行三个过程，假设每个步骤消耗时间 t")]),t._v(" "),a("p",[t._v("顺序执行方式：n 条指令则消耗时间 3nt")]),t._v(" "),a("ul",[a("li",[t._v("控制简单，硬件代价小，执行缓慢")])]),t._v(" "),a("p",[t._v("一次重叠执行：即执行上一条指令的“执行过程”时，同时执行下一条指令的“取值过程”，重叠一次操作，这样 n 条指令将消耗时间 3t + (n-1)2t = (1+2n)t")]),t._v(" "),a("ul",[a("li",[t._v("3t 为第一条指令完成时间，之后每经过 2t，都会有一条指令完成（参考计网分组交换）")]),t._v(" "),a("li",[t._v("需要多硬件，并行重叠一次，则需要两个硬件，但时间缩短到原来的 2/3")])]),t._v(" "),a("p",[t._v("二次重叠执行：执行上一个“分析”过程时，开始执行下一个“取值”过程，折叠两个过程，这样耗时将缩短至 3t + (n-1)t = (2+n)t")]),t._v(" "),a("ul",[a("li",[t._v("时间缩短至原来的 1/3")])]),t._v(" "),a("p",[t._v("推广到一般，当步骤增多，我们在第一步骤结束后立马开始第二条指令，这种模式就叫做流水线模式")]),t._v(" "),a("h3",{attrs:{id:"流水线的性能指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流水线的性能指标"}},[t._v("#")]),t._v(" 流水线的性能指标")]),t._v(" "),a("p",[t._v("吞吐率：单位时间内流水线完成的任务数量")]),t._v(" "),a("ul",[a("li",[t._v("对于 n 个任务，每个步骤耗时 t，共 k 个步骤")]),t._v(" "),a("li",[t._v("完成 n 个任务所需时间为 Tk = kt + (n-1)t")]),t._v(" "),a("li",[t._v("吞吐率 TP = n / Tk")]),t._v(" "),a("li",[t._v("当 n->无穷时，kt 被忽略，n/(n-1) = 1，得到最大吞吐率 n/t")])]),t._v(" "),a("p",[t._v("加速比：流水线和等功能的非流水线的速度之比")]),t._v(" "),a("mjx-container",{staticClass:"MathJax",staticStyle:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"},attrs:{jax:"SVG",display:"true"}},[a("svg",{staticStyle:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.172ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"31.276ex",height:"5.271ex",role:"img",focusable:"false",viewBox:"0 -1370 13823.9 2330","aria-hidden":"true"}},[a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D446",d:"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(922.8,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}})]),a("g",{attrs:{"data-mml-node":"mfrac",transform:"translate(1978.6,0)"}},[a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(1650.7,676)"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(521,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(1343.2,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2343.4,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"}})])]),a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(220,-710)"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(521,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(1104.2,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(2104.4,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2493.4,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(3315.7,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),a("g",{attrs:{"data-mml-node":"mn",transform:"translate(4315.9,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(4815.9,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(5204.9,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"}})])]),a("rect",{attrs:{width:"5765.9",height:"60",x:"120",y:"220"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(8262.2,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}})]),a("g",{attrs:{"data-mml-node":"mfrac",transform:"translate(9318,0)"}},[a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(1692.4,676)"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(521,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})])]),a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(220,-686)"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(743.2,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(1743.4,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(2565.7,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),a("g",{attrs:{"data-mml-node":"mn",transform:"translate(3565.9,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})])]),a("rect",{attrs:{width:"4265.9",height:"60",x:"120",y:"220"}})])])])]),a("mjx-assistive-mml",{staticStyle:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"},attrs:{unselectable:"on",display:"block"}},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[a("mi",[t._v("S")]),a("mo",[t._v("=")]),a("mfrac",[a("mrow",[a("mi",[t._v("k")]),a("mi",[t._v("n")]),a("mo",[t._v("×")]),a("mi",[t._v("t")])],1),a("mrow",[a("mi",[t._v("k")]),a("mi",[t._v("t")]),a("mo",[t._v("+")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("mi",[t._v("n")]),a("mo",[t._v("−")]),a("mn",[t._v("1")]),a("mo",{attrs:{stretchy:"false"}},[t._v(")")]),a("mi",[t._v("t")])],1)],1),a("mo",[t._v("=")]),a("mfrac",[a("mrow",[a("mi",[t._v("k")]),a("mi",[t._v("n")])],1),a("mrow",[a("mi",[t._v("k")]),a("mo",[t._v("+")]),a("mi",[t._v("n")]),a("mo",[t._v("−")]),a("mn",[t._v("1")])],1)],1)],1)],1)],1),a("p",[t._v("效率：各功能段的利用率")]),t._v(" "),a("mjx-container",{staticClass:"MathJax",staticStyle:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"},attrs:{jax:"SVG",display:"true"}},[a("svg",{staticStyle:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.172ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"17.517ex",height:"4.701ex",role:"img",focusable:"false",viewBox:"0 -1118 7742.4 2078","aria-hidden":"true"}},[a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(1041.8,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}})]),a("g",{attrs:{"data-mml-node":"mfrac",transform:"translate(2097.6,0)"}},[a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2522.4,676)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(220,-710)"}},[a("g",{attrs:{"data-mml-node":"mo"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(389,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(1132.2,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2132.4,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(2954.7,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),a("g",{attrs:{"data-mml-node":"mn",transform:"translate(3954.9,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(4454.9,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(4843.9,0)"}},[a("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"}})])]),a("rect",{attrs:{width:"5404.9",height:"60",x:"120",y:"220"}})])])])]),a("mjx-assistive-mml",{staticStyle:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"},attrs:{unselectable:"on",display:"block"}},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[a("mi",[t._v("E")]),a("mo",[t._v("=")]),a("mfrac",[a("mi",[t._v("n")]),a("mrow",[a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("mi",[t._v("k")]),a("mo",[t._v("+")]),a("mi",[t._v("n")]),a("mo",[t._v("−")]),a("mn",[t._v("1")]),a("mo",{attrs:{stretchy:"false"}},[t._v(")")]),a("mi",[t._v("t")])],1)],1)],1)],1)],1),a("h3",{attrs:{id:"影响流水线的因素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#影响流水线的因素"}},[t._v("#")]),t._v(" 影响流水线的因素")]),t._v(" "),a("h4",{attrs:{id:"结构相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构相关"}},[t._v("#")]),t._v(" 结构相关")]),t._v(" "),a("p",[t._v("结构相关（资源冲突 / 资源冒险）因素：并行执行需要大量硬件资源，如果硬件不够就会出现资源冲突")]),t._v(" "),a("p",[t._v("有两种解决办法")]),t._v(" "),a("ul",[a("li",[t._v("前指令访存，使后一条相关指令暂停一个时钟周期")]),t._v(" "),a("li",[t._v("加入资源使之够用")])]),t._v(" "),a("h4",{attrs:{id:"控制相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制相关"}},[t._v("#")]),t._v(" 控制相关")]),t._v(" "),a("p",[t._v("流水线遇到转移指令改变了 PC 信号的指令而造成断流")]),t._v(" "),a("p",[t._v("解决办法")]),t._v(" "),a("ul",[a("li",[t._v("预测转移指令分支")]),t._v(" "),a("li",[t._v("预测转移成功和不成功两个控制流方向的目标指令")]),t._v(" "),a("li",[t._v("加快和提前形成条件码")]),t._v(" "),a("li",[t._v("提高转移方向的猜准率")])]),t._v(" "),a("p",[t._v("前面指令阻塞，后续指令也被阻塞，属于控制相关")]),t._v(" "),a("h4",{attrs:{id:"数据相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据相关"}},[t._v("#")]),t._v(" 数据相关")]),t._v(" "),a("blockquote",[a("p",[t._v("重点")])]),t._v(" "),a("p",[t._v("数据相关（数据冲突 / 数据冒险）因素：前一条指令和后一条指令同时执行并操作同一条数据")]),t._v(" "),a("p",[t._v("写后读（Write After Read）：前后相邻，编号相同，前写后读")]),t._v(" "),a("ul",[a("li",[t._v("前一条指令还未把新数据写入内存，下一条指令已经读出了旧数据，这种现象叫做写后读错误（写后于读）")]),t._v(" "),a("li",[t._v("解决办法：让读阻塞若干周期，等待写操作完毕")])]),t._v(" "),a("p",[t._v("写后写（Write After Write）：前后相邻，编号相同，前写后写")]),t._v(" "),a("ul",[a("li",[t._v("后一个写指令执行太快，覆盖了前一个写操作，最终数据是前一个写操作的结果")]),t._v(" "),a("li",[t._v("为什么会出现后一个写快于前一个写？指令执行具有异步性，无法预判")])]),t._v(" "),a("p",[t._v("读后写（Read After Write）：前后相邻，编号相同，前读后写")]),t._v(" "),a("ul",[a("li",[t._v("后面指令写的太快，导致前一条指令读到的是新数据")])]),t._v(" "),a("p",[t._v("注意")]),t._v(" "),a("ul",[a("li",[t._v("当按序发生按序执行时，只会发生 WAR 错误，WAW 和 RAW 均不会发生")]),t._v(" "),a("li",[t._v("无转发执行 == 按序执行")]),t._v(" "),a("li",[t._v("相邻的定义并不是紧挨着，而是相隔距离小于等于 n-2 为相邻，n 为流水线段数。如共五段，指令 I1 和 I4 相邻，I1 和 I5 不相邻")])]),t._v(" "),a("p",[t._v("解决办法")]),t._v(" "),a("ul",[a("li",[t._v("暂停周期")]),t._v(" "),a("li",[t._v("设置相关专用通路，数据旁路技术")]),t._v(" "),a("li",[t._v("编译器调整指令顺序")])]),t._v(" "),a("h3",{attrs:{id:"超流水线技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超流水线技术"}},[t._v("#")]),t._v(" 超流水线技术")]),t._v(" "),a("p",[t._v("三种超发技术")]),t._v(" "),a("ul",[a("li",[t._v("超标量")]),t._v(" "),a("li",[t._v("超流水线技术")]),t._v(" "),a("li",[t._v("超长指令字")])]),t._v(" "),a("p",[t._v("均依赖于编译器的优化和多硬件支撑")])],1)}),[],!1,null,null,null);a.default=Q.exports},635:function(t,a,v){t.exports=v.p+"assets/img/QQ截图20221010192643.51bc2a4f.png"},636:function(t,a,v){t.exports=v.p+"assets/img/QQ截图20221010183941.67c356cd.png"},637:function(t,a,v){t.exports=v.p+"assets/img/QQ截图20221010192103.218b3d56.png"},638:function(t,a,v){t.exports=v.p+"assets/img/QQ截图20221010192039.1ab5ec33.png"},639:function(t,a,v){t.exports=v.p+"assets/img/QQ截图20221010193827.921793f3.png"},640:function(t,a,v){t.exports=v.p+"assets/img/QQ截图20221011192433.52b917d3.png"},641:function(t,a,v){t.exports=v.p+"assets/img/截图_2022-10-11_11-09-04.67890a3c.png"},642:function(t,a,v){t.exports=v.p+"assets/img/截图_2022-10-11_11-17-34.76e441c5.png"}}]);