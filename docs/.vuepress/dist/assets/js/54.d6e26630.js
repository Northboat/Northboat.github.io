(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{1542:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("软件业的人乐于做这样的事 —— 找一些词汇，并把它们引申到大量微妙而又互相矛盾的意义，例如“架构”")]),t._v(" "),s("p",[t._v("《Patterns of Enterprise Application Architecture》")])]),t._v(" "),s("h2",{attrs:{id:"分布式系统概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统概述"}},[t._v("#")]),t._v(" 分布式系统概述")]),t._v(" "),s("p",[t._v("分布式系统的定义：多个计算机通过网络协同工作而对外表现为一个整体")]),t._v(" "),s("p",[t._v("典型应用")]),t._v(" "),s("ul",[s("li",[t._v("分布式数据库（如 MongoDB、HBase）")]),t._v(" "),s("li",[t._v("分布式存储（如 Hadoop HDFS、Ceph）")]),t._v(" "),s("li",[t._v("分布式计算（如 Spark、Flink）")]),t._v(" "),s("li",[t._v("微服务架构（如 Spring Cloud、Dubbo）")])]),t._v(" "),s("h3",{attrs:{id:"什么是分布式系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式系统"}},[t._v("#")]),t._v(" 什么是分布式系统")]),t._v(" "),s("p",[t._v("要解释什么是分布式系统，得从分布式架构说起，它定义了分布式系统的设计与实现方法，它描述了系统的结构、组件如何交互、数据如何存储、计算如何分配等。可以说，架构是钢筋，而系统是楼房，系统依赖于架构")]),t._v(" "),s("p",[t._v("常见的分布式架构模式")]),t._v(" "),s("ol",[s("li",[t._v("主从架构（Master-Slave）：适用于数据库读写分离，如 MySQL 主从复制")]),t._v(" "),s("li",[t._v("分片架构（Sharding）：适用于高并发场景，如 Elasticsearch 数据分片")]),t._v(" "),s("li",[t._v("微服务架构（Microservices）：适用于企业级应用，如 Spring Cloud/Dubbo")]),t._v(" "),s("li",[t._v("事件驱动架构（EDA, Event-Driven Architecture）：适用于高吞吐业务，如 Kafka 消息队列处理日志流")])]),t._v(" "),s("p",[t._v("在这些架构模式之上，构建了一个个所谓的分布式系统，如最常见的应用淘宝、京东等，都是采用"),s("strong",[t._v("微服务架构")]),t._v("的分布式系统")]),t._v(" "),s("p",[t._v("通常，Spring 小子（没错就是我）开发的所谓分布式系统，都是指的微服务架构（Spring Cloud）上的分布式系统")]),t._v(" "),s("h3",{attrs:{id:"为什么要使用分布式设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用分布式设计"}},[t._v("#")]),t._v(" 为什么要使用分布式设计")]),t._v(" "),s("p",[t._v("分布式系统的核心特点")]),t._v(" "),s("ul",[s("li",[t._v("多机协作：任务由多个计算机协作完成，而非单机处理")]),t._v(" "),s("li",[t._v("数据共享：不同节点之间共享数据，可能涉及数据一致性问题")]),t._v(" "),s("li",[t._v("去中心化：避免单点故障，提高系统可用性")]),t._v(" "),s("li",[t._v("并发性：多个节点可以并行处理任务，提高吞吐量")]),t._v(" "),s("li",[t._v("容错能力：某些节点宕机时，系统仍能继续运行")])]),t._v(" "),s("p",[t._v("说白了，就是扩展性好、稳定性高、容错强 —— 所谓“狡兔三窟”")]),t._v(" "),s("h2",{attrs:{id:"微服务架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务架构"}},[t._v("#")]),t._v(" 微服务架构")]),t._v(" "),s("h3",{attrs:{id:"spring-cloud"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud"}},[t._v("#")]),t._v(" Spring Cloud")]),t._v(" "),s("p",[t._v("刚刚也说到，Spring Cloud 是 Java 生态中最成熟的"),s("strong",[t._v("微服务架构")]),t._v("解决方案之一")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("微服务架构（Microservices Architecture）")]),t._v(" 是一种软件架构风格，它将应用拆分为"),s("strong",[t._v("多个独立运行的服务")]),t._v("，每个服务负责单一业务功能，服务之间通过 API（通常是 HTTP+JSON 或 gRPC）进行通信")])]),t._v(" "),s("p",[t._v("Spring Cloud 就是专门用于"),s("strong",[t._v("构建、管理和维护微服务架构")]),t._v("的框架，提供了一整套完整的微服务架构解决方案，涵盖"),s("strong",[t._v("服务注册发现、负载均衡、配置管理、熔断限流、分布式链路追踪")]),t._v("等关键功能")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("组件")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("具体而言")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Spring Cloud Eureka")]),t._v(" "),s("td",[t._v("服务注册与发现")]),t._v(" "),s("td",[t._v("负责管理微服务实例，类似于 DNS")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud LoadBalancer")]),t._v(" "),s("td",[t._v("负载均衡")]),t._v(" "),s("td",[t._v("让多个实例均衡接收请求")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud OpenFeign")]),t._v(" "),s("td",[t._v("服务调用")]),t._v(" "),s("td",[t._v("通过 HTTP 远程调用其他微服务")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Gateway")]),t._v(" "),s("td",[t._v("API 网关")]),t._v(" "),s("td",[t._v("统一流量入口，路由请求并提供安全控制")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Config")]),t._v(" "),s("td",[t._v("配置管理")]),t._v(" "),s("td",[t._v("统一管理分布式系统的配置")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Sleuth & Zipkin")]),t._v(" "),s("td",[t._v("分布式链路追踪")]),t._v(" "),s("td",[t._v("监控请求的调用链路，排查性能瓶颈")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Resilience4J")]),t._v(" "),s("td",[t._v("熔断限流")]),t._v(" "),s("td",[t._v("保护服务避免雪崩效应（Circuit Breaker）")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Stream")]),t._v(" "),s("td",[t._v("消息队列")]),t._v(" "),s("td",[t._v("让服务间异步通信（支持 Kafka、RabbitMQ）")])])])]),t._v(" "),s("p",[t._v("SpringCloud 主要基于 SpringBoot")]),t._v(" "),s("h3",{attrs:{id:"一个经典的-spring-cloud-架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个经典的-spring-cloud-架构"}},[t._v("#")]),t._v(" 一个经典的 Spring Cloud 架构")]),t._v(" "),s("p",[t._v("假设我们有一个电商系统，包含")]),t._v(" "),s("ul",[s("li",[t._v("用户服务（User Service）")]),t._v(" "),s("li",[t._v("订单服务（Order Service）")]),t._v(" "),s("li",[t._v("商品服务（Product Service）")]),t._v(" "),s("li",[t._v("支付服务（Payment Service）")]),t._v(" "),s("li",[t._v("网关（Gateway）")])]),t._v(" "),s("p",[t._v("其体系架构如下")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("                         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------+")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Spring Cloud Gateway  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------+")]),t._v("\n                                 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+------------------+")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+      +------------+      +------------+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 用户服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 订单服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 商品服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--\x3e | (Order)    | <--\x3e | (Product)  |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+      +------------+      +------------+")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                                     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+                      +----------------+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 支付服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 消息队列"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Kafka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Payment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------\x3e | 事件驱动        |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+                      +----------------+")]),t._v("\n")])])]),s("p",[t._v("在这个架构中")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Spring Cloud Gateway")]),t._v(" 充当 API 入口，管理所有 HTTP 请求")]),t._v(" "),s("li",[s("strong",[t._v("Eureka")]),t._v(" 作为注册中心，负责管理所有微服务实例，实现"),s("strong",[t._v("服务发现")])]),t._v(" "),s("li",[s("strong",[t._v("Feign")]),t._v(" 让服务之间可以更优雅地相互调用（直接从 Eureka 中寻找），而不用自己写 HTTP 请求")]),t._v(" "),s("li",[s("strong",[t._v("Resilience4J")]),t._v(" 确保服务故障时自动熔断，防止级联故障")]),t._v(" "),s("li",[s("strong",[t._v("Kafka")]),t._v(" 实现异步消息通信（如订单完成后通知支付服务）")])]),t._v(" "),s("h3",{attrs:{id:"nio-和-netty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nio-和-netty"}},[t._v("#")]),t._v(" NIO 和 Netty")]),t._v(" "),s("blockquote",[s("p",[t._v("Spring Cloud 生态中众多微服务组件的底层通信组件")])]),t._v(" "),s("p",[t._v("Netty：基于 Java NIO 开发的网络流框架，是 Java 领域非常强大的"),s("strong",[t._v("高性能网络通信框架")]),t._v("，很多中间件（Dubbo、Elasticsearch、RocketMQ、gRPC 等）都用它作为底层通信组件")]),t._v(" "),s("p",[t._v("简单来说：Netty 是 "),s("strong",[t._v("一个封装了 Java NIO 的网络框架")]),t._v("，让开发者能轻松构建高性能的 TCP/UDP 网络服务，而不用自己去写繁琐的 Selector、Channel、Buffer 这些低级 API")]),t._v(" "),s("p",[s("strong",[t._v("什么是 NIO？")])]),t._v(" "),s("p",[t._v("NIO（New Input/Output） 是 Java 1.4 引入的一组 API，用于提供**非阻塞（Asynchronous）**的输入输出操作，它让我们能更高效地处理大量的 I/O 操作")]),t._v(" "),s("p",[t._v("NIO 主要的优势在于能够"),s("strong",[t._v("不阻塞线程")]),t._v("来处理 I/O 操作，它是为了弥补传统的阻塞 I/O（BIO）和 高并发场景下性能瓶颈而设计的")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("怎么实现的非阻塞？")])])]),t._v(" "),s("p",[s("strong",[t._v("Selector")]),t._v(" 和 "),s("strong",[t._v("Channel")]),t._v(" 是 NIO 的核心组成，通过"),s("strong",[t._v("事件驱动")]),t._v("实现异步非阻塞 I/O 操作")]),t._v(" "),s("p",[s("strong",[t._v("Netty 高性能的关键")])]),t._v(" "),s("p",[t._v("🔹 1. 线程池 + 事件驱动")]),t._v(" "),s("p",[t._v("Netty 采用多 Reactor 线程模型，通过 "),s("strong",[t._v("EventLoopGroup + 线程池")]),t._v("，避免传统 BIO 的"),s("strong",[t._v("一线程一连接")]),t._v("低效模式")]),t._v(" "),s("ul",[s("li",[t._v("BIO（阻塞 IO）：一个线程处理一个连接")]),t._v(" "),s("li",[t._v("NIO（非阻塞 IO）：多个连接共享一个线程")]),t._v(" "),s("li",[t._v("Netty（多 Reactor 模型）：多个线程池高效管理连接")])]),t._v(" "),s("p",[t._v("📌 示例：Netty 线程池")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" bossGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理连接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" workerGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理读写")]),t._v("\n")])])]),s("p",[t._v("🔹 2. 零拷贝（Zero-Copy）")]),t._v(" "),s("p",[t._v("Netty 通过 "),s("strong",[t._v("DirectByteBuf、CompositeByteBuf")]),t._v(" 进行零拷贝优化")]),t._v(" "),s("ul",[s("li",[t._v("减少 CPU 拷贝（避免 "),s("code",[t._v("System.arraycopy")]),t._v("）")]),t._v(" "),s("li",[t._v("减少内存分配（减少 GC 压力）")]),t._v(" "),s("li",[s("strong",[t._v("减少 "),s("strong",[t._v("Buffer")]),t._v(" 复制")]),t._v("（直接操作堆外内存）")])]),t._v(" "),s("p",[t._v("📌 **示例：**Netty 直接使用堆外内存")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuf")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Unpooled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("directBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接分配堆外内存")]),t._v("\n")])])]),s("p",[t._v("🔹 3. Pooled Buffer（池化内存）")]),t._v(" "),s("p",[t._v("Netty 使用内存池（Buffer Pool），重复利用 ByteBuf，避免反复创建对象")]),t._v(" "),s("p",[t._v("📌 示例：使用池化的 ByteBuf")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuf")]),t._v(" pooledBuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PooledByteBufAllocator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEFAULT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("🔹 4. TCP 粘包/拆包处理")]),t._v(" "),s("p",[t._v("TCP 发送数据时，多个小包可能合并成一个大包（"),s("strong",[t._v("粘包")]),t._v("），或者一个大包被拆成多个小包（"),s("strong",[t._v("拆包")]),t._v("）。Netty 通过"),s("strong",[t._v("解码器")]),t._v("解决此问题")]),t._v(" "),s("p",[t._v("📌 示例：使用 Netty 提供的拆包解码器")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipeline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LengthFieldBasedFrameDecoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面这个 LengthFieldBasedFrameDecoder 解码器")]),t._v(" "),s("ul",[s("li",[t._v("按照数据包长度字段解析消息")]),t._v(" "),s("li",[t._v("避免 TCP 粘包/拆包问题")])]),t._v(" "),s("h2",{attrs:{id:"常用组件和中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用组件和中间件"}},[t._v("#")]),t._v(" 常用组件和中间件")]),t._v(" "),s("h3",{attrs:{id:"nacos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nacos"}},[t._v("#")]),t._v(" Nacos")]),t._v(" "),s("blockquote",[s("p",[t._v("注册中心是"),s("strong",[t._v("微服务通信的核心")]),t._v("，不管是 Eureka、Feign 还是 Dubbo，他们的服务端和客户端均要在注册中心进行动态管理")])]),t._v(" "),s("p",[t._v("Nacos 是 SpringCloud Alibaba 的组件，而 SpringCloud Alibaba 遵循 SpringCloud 中定义的服务注册、服务发现规范，因此使用 Nacos 和使用 Eureka 对于微服务接口而言，并没有太大区别")]),t._v(" "),s("p",[t._v("差异无非")]),t._v(" "),s("ul",[s("li",[t._v("依赖不同")]),t._v(" "),s("li",[t._v("服务地址不同")])]),t._v(" "),s("p",[t._v("具体而言，每个微服务通过这样的方式集中管理")]),t._v(" "),s("p",[t._v("1️⃣ 首先引入 Nacos 客户端依赖并进行配置")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.alibaba.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-alibaba-nacos-discovery"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2022.0.0.0"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 根据 Spring Cloud 版本选择 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("discovery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server-addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nacos 服务器地址")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" public           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命名空间（默认 public）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DEFAULT_GROUP        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分组（默认 DEFAULT_GROUP）")]),t._v("\n")])])]),s("p",[t._v("2️⃣ 在主类中启动 Nacos 注册服务")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userservice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoconfigure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootApplication")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cloud"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("discovery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnableDiscoveryClient")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableDiscoveryClient")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用服务注册与发现（兼容 Nacos）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceApplication")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("3️⃣ 正常编写"),s("code",[t._v("Controller")]),t._v("层代码，如")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/users"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" userMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建用户")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        userMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询用户")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{id}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" userMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如此，当前项目"),s("code",[t._v("user-service")]),t._v("的接口就被注册在地址为"),s("code",[t._v("localhost:8848")]),t._v("的 Nacos 中，其他模块可以通过 Feign 客户端对该接口进行调用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FeignClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user-service"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务名需与目标服务在 Nacos 中的名称一致")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceClient")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{id}}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"feign"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feign"}},[t._v("#")]),t._v(" Feign")]),t._v(" "),s("blockquote",[s("p",[t._v("SpringCloud OpenFeign，本质上是 RestTemplate 的上位替代，封装了 HTTP 请求在各微服务接口之间进行调用，属同步调用，不属于 RPC（远程过程调用）")])]),t._v(" "),s("p",[t._v("刚刚简单展示了调用 user-service 的 Feign 客户端编写，以下引入另一个模块 order-service 来更清晰的展示调用过程")]),t._v(" "),s("p",[t._v("以同样的方式，我们创建一个 order-service 模块运行在 8082 端口，并提供一个订单查询接口注册到 Nacos")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8082")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("discovery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server-addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nacos 服务器地址")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" public           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命名空间（默认 public）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DEFAULT_GROUP        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分组（默认 DEFAULT_GROUP）")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询用户账单")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{userId}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOrders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOrdersByUserId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以下展示如何在 user-service 模块中调用上面注册到 Nacos 的 order-service 服务")]),t._v(" "),s("p",[t._v("1️⃣ 引入 Feign 依赖并在主类中启用（在 UserService 模块中）")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-openfeign"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableDiscoveryClient")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableFeignClients")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用 Feign 客户端")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceApplication")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("3️⃣ 编写 Feign 客户端调用上面 order-service 的服务")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FeignClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-service"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务名需与目标服务在 Nacos 中的名称一致")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderServiceClient")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/orders/{userId}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOrdersByUserId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("4️⃣ 在 Controller 层调用 Feign 客户端")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/users"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderServiceClient")]),t._v(" orderServiceClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{id}/orders"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserOrders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" orderServiceClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOrdersByUserId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如此便实现了微服务之间的一次简单的调用，对于用户而言，他请求的实际上是"),s("code",[t._v("/users/{id}/orders")]),t._v("接口，在微服务内部，这个请求被转发到"),s("code",[t._v("/orders/{id}")]),t._v("接口，并最终将结果通过"),s("code",[t._v("/users/{id}/orders")]),t._v("返回")]),t._v(" "),s("h3",{attrs:{id:"gateway"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gateway"}},[t._v("#")]),t._v(" Gateway")]),t._v(" "),s("p",[t._v("Gateway 网关是微服务的门神，负责")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("权限控制")]),t._v("：网关作为微服务入口，需要校验用户是是否有请求资格，如果没有则进行拦截")]),t._v(" "),s("li",[s("strong",[t._v("路由和负载均衡")]),t._v("：一切请求都必须先经过gateway，但网关不处理业务，而是根据某种规则，把请求转发到某个微服务，这个过程叫做路由。当然路由的目标服务有多个时，还需要做负载均衡")]),t._v(" "),s("li",[s("strong",[t._v("限流")]),t._v("：当请求流量过高时，在网关中按照下流的微服务能够接受的速度来放行请求，避免服务压力过大")])]),t._v(" "),s("p",[t._v("基本架构")]),t._v(" "),s("img",{attrs:{src:a(861)}}),t._v(" "),s("p",[s("strong",[t._v("实际上，在现实业务中，请求先走负载均衡，再打网关，最后打到微服务")])]),t._v(" "),s("p",[t._v("maven 引入")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--网关--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-gateway"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--nacos服务发现依赖 自己也要注册到nacos--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.alibaba.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-alibaba-nacos-discovery"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("application 配置")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10010")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网关端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gateway "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server-addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nacos地址")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gateway")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("routes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网关路由配置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//orderservice\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("predicates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Path=/user/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" After=2021"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("20T17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("42"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("47.789"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("07"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("America/Denver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#断言：只有在这个事件后发送的请求才可以")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由id，自定义，只要唯一即可")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//userservice "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由的目标地址 lb就是负载均衡，后面跟服务名称")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("predicates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由断言，也就是判断请求是否符合路由规则的条件")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Path=/user/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个是按照路径匹配，只要以/user/开头就符合要求")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 过滤器（当前过滤器写在userservice路由下，因此仅仅对访问userservice的请求有效）")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" AddRequestHeader=Conan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isMe"),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加请求头")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default-filters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认过滤项（对所有路由都有效）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" AddRequestHeader=Truth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Itcast is freaking awesome"),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),t._v("\n")])])]),s("p",[t._v("有一个问题：Gateway 的权限拦截和 SpringSecurity 有什么区别，能否相互替代？")]),t._v(" "),s("h2",{attrs:{id:"rpc-框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rpc-框架"}},[t._v("#")]),t._v(" RPC 框架")]),t._v(" "),s("h3",{attrs:{id:"服务间通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务间通信"}},[t._v("#")]),t._v(" 服务间通信")]),t._v(" "),s("p",[t._v("详见 "),s("a",{attrs:{href:"https://arkrypto.github.io/pages/2afee4/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("分布式系统设计 - 深入 RPC 框架 | Arkrypto's Wiki"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[t._v("#")]),t._v(" 消息队列")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("缓冲")]),t._v("是 MQ 的关键词，"),s("strong",[t._v("异步")]),t._v("是其主要特征")])]),t._v(" "),s("p",[t._v("这里主要考虑 Kafka 作为日志收集的使用，如果是消息中间件可以更多参考 "),s("a",{attrs:{href:"https://arkrypto.github.io/pages/45216b/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("RabbitMQ | Arkrypto's Wiki"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("之前用 RabbitMQ 做过一个消息中间件，用于解耦用户请求和大模型的响应，即用户作为生产者，LLM 作为消费者，MQ 在中间做一层缓冲")])]),t._v(" "),s("p",[t._v("Kafka 是一个流式框架，设计本身就是为了流处理和批处理，以面对大数据的冲击和消费，例如日志处理，作为生产者和消费者的一个中间角色对日志进行持久化的存储")]),t._v(" "),s("p",[t._v("一些通用的应用场景")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("具体场景")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("日志收集")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("系统日志、应用日志、审计日志")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("最经典用途，"),s("strong",[t._v("解耦日志生成和分析")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("消息中间件")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("系统间消息异步通信")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("替代传统 MQ（比如RabbitMQ、ActiveMQ）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("流式处理")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("实时数据流分析")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("搭配 Flink、Spark Streaming 做实时ETL、报警、监控")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("指标监控")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("业务指标、运维监控、报警系统")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("低延迟收集与分析，做实时仪表盘")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("数据管道")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("大数据同步，数据湖、仓库建模")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将 MySQL、MongoDB 等变更流入 Kafka，推送到 Hadoop、Hive、ES")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("事件驱动架构（EDA）")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("微服务事件总线，用户行为追踪")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("服务间解耦、异步处理，支持订阅模式")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("IoT 数据收集")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设备传感器数据流")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("IoT 设备产生的大量实时数据通过Kafka聚合")])])])]),t._v(" "),s("h3",{attrs:{id:"日志收集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志收集"}},[t._v("#")]),t._v(" 日志收集")]),t._v(" "),s("blockquote",[s("p",[t._v("Kafka 充当一个"),s("strong",[t._v("高性能的日志缓冲中间件")])])]),t._v(" "),s("p",[t._v("以日志收集为例，其数据流向如下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("日志收集 - 日志源服务器（Nginx，Tomcat，SpringBoot 应用）\n    \t  ↓\n\t      Filebeat / Fluentd / Logstash（轻量级收集）\n    \t  ↓\n日志存储 - Kafka（原始日志 Topic）\n    \t  ↓\n\t      Logstash / Flink（复杂加工处理）\n    \t  ↓\n\t      Kafka（清洗后的日志 Topic）\n    \t  ↓\n日志消费 - Elasticsearch / HDFS / DB（存储 & 检索）\n")])])]),s("p",[t._v("也可以简单一点，直接用 Flink + ES 消费原始日志，清洗后的日志无需二次存入 MQ，而是直接流入 ES")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("日志收集 - 日志源服务器（Nginx，Tomcat，SpringBoot 应用）\n    \t  ↓\n\t      Filebeat / Fluentd / Logstash（轻量级收集）\n    \t  ↓\n日志存储 - Kafka（原始日志 Topic）\n    \t  ↓\n日志消费 - Logstash / Flink（复杂加工处理）\n    \t  ↓\n    \t  Elasticsearch / HDFS / DB（存储 & 检索）\n")])])]),s("p",[t._v("1️⃣ 日志采集")]),t._v(" "),s("p",[t._v("本地文件：假设我们现在有应用日志"),s("code",[t._v("/var/log/nginx/access.log")])]),t._v(" "),s("p",[t._v("日志采集（"),s("code",[t._v("Filebeat/Fluentd/Logstash")]),t._v("）：从源头采集原始数据，快速、低消耗的搬运数据到 Kafka")]),t._v(" "),s("p",[t._v("2️⃣ 日志存储")]),t._v(" "),s("p",[s("code",[t._v("Kafka")]),t._v("：日志存储，将原始日志存入 Kafka Topic 中")]),t._v(" "),s("p",[t._v("3️⃣ 日志消费")]),t._v(" "),s("p",[t._v("数据清洗（"),s("code",[t._v("Logstash/Flink")]),t._v("）：对原始数据进行稍复杂的处理，就像爬虫清洗 HTML 数据一样")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("日志字段提取")]),t._v(" "),s("td",[t._v("把 "),s("code",[t._v('"INFO 2024-04-26 server started"')]),t._v(" 解析成结构化数据")])]),t._v(" "),s("tr",[s("td",[t._v("日志过滤")]),t._v(" "),s("td",[t._v("只保留 ERROR 日志")])]),t._v(" "),s("tr",[s("td",[t._v("日志清洗")]),t._v(" "),s("td",[t._v("修正格式、补充缺失字段")])]),t._v(" "),s("tr",[s("td",[t._v("日志分流")]),t._v(" "),s("td",[t._v("按不同类型日志打到不同 Kafka topic")])]),t._v(" "),s("tr",[s("td",[t._v("实时聚合")]),t._v(" "),s("td",[t._v("比如一分钟内统计错误数量")])]),t._v(" "),s("tr",[s("td",[t._v("异常检测")]),t._v(" "),s("td",[t._v("实时识别异常模式")])])])]),t._v(" "),s("p",[t._v("PS：Logstash/Flink 处理后的数据并不会直接落盘，这里可以选择直接存入数据库如 ES 或是存回 Kafka（再流入 DB）")]),t._v(" "),s("p",[t._v("Logstash 和 Flink 异同")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("组件")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("作用")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("特点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("Logstash")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("复杂的日志加工和路由器")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("插件丰富（Filter, Output），适合中小型处理")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("Flink")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("大规模实时流处理框架")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("超高吞吐、低延迟，适合复杂计算和大规模流")])])])]),t._v(" "),s("p",[t._v("存储 & 检测")]),t._v(" "),s("ol",[s("li",[t._v("ELK Stack（Elasticsearch + Logstash + Kibana）\n"),s("ul",[s("li",[t._v("Logstash 从 Kafka 读日志，清洗后写到 Elasticsearch")]),t._v(" "),s("li",[t._v("Kibana 做日志检索和可视化")])])]),t._v(" "),s("li",[t._v("实时处理系统（Flink / Spark Streaming）：实时计算异常日志、报警、日志聚合等")]),t._v(" "),s("li",[t._v("离线存储：存到 HDFS、Hive，做离线分析")])]),t._v(" "),s("h2",{attrs:{id:"大数据计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大数据计算"}},[t._v("#")]),t._v(" 大数据计算")]),t._v(" "),s("h3",{attrs:{id:"flink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flink"}},[t._v("#")]),t._v(" Flink")]),t._v(" "),s("p",[t._v("在大数据场景中，Flink 经常和 Kafka 搭配，用来"),s("strong",[t._v("清洗")]),t._v(" Kafka 的数据流")]),t._v(" "),s("ol",[s("li",[t._v("Kafka 生产数据（日志、用户点击、设备数据等）")]),t._v(" "),s("li",[t._v("Flink 进行实时处理（聚合、分析、清洗）")]),t._v(" "),s("li",[t._v("处理结果存入 Kafka（本地磁盘） / 关系型数据库 / Elasticsearch")])]),t._v(" "),s("p",[t._v("📌 示例：Flink 读取 Kafka 并统计用户点击量")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),t._v(" env "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecutionEnvironment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlinkKafkaConsumer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" kafkaConsumer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlinkKafkaConsumer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user_clicks"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleStringSchema")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataStream")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafkaConsumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 统计每个用户的点击次数")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tuple2")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Kafka Stream Processing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"spark"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark"}},[t._v("#")]),t._v(" Spark")]),t._v(" "),s("p",[t._v("Flink 专注于流处理，而 Spark 以批处理为主")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("对比项")])]),t._v(" "),s("th",[s("strong",[t._v("Flink")])]),t._v(" "),s("th",[s("strong",[t._v("Spark")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("计算模式")])]),t._v(" "),s("td",[t._v("主要是"),s("strong",[t._v("流计算")]),t._v("，也支持批处理")]),t._v(" "),s("td",[t._v("主要是"),s("strong",[t._v("批处理")]),t._v("，支持流计算")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("延迟")])]),t._v(" "),s("td",[t._v("毫秒级")]),t._v(" "),s("td",[t._v("秒级")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("吞吐量")])]),t._v(" "),s("td",[t._v("高吞吐，适用于高并发")]),t._v(" "),s("td",[t._v("较高吞吐，但稍逊于 Flink")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("故障恢复")])]),t._v(" "),s("td",[t._v("Exactly-Once 语义，保证数据一致性")]),t._v(" "),s("td",[t._v("At-Least-Once，可能重复计算")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("API 兼容性")])]),t._v(" "),s("td",[t._v("提供 SQL、Java、Python API")]),t._v(" "),s("td",[t._v("提供 SQL、Scala、Java API")])])])]),t._v(" "),s("h2",{attrs:{id:"elasticsearch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[t._v("#")]),t._v(" ElasticSearch")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/buchizicai/p/17093719.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("ElasticSearch (ES从入门到精通一篇就够了) - 不吃紫菜 - 博客园"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"elk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elk"}},[t._v("#")]),t._v(" ELK")]),t._v(" "),s("p",[t._v("ELK，Elastic Stack，是以 ElasticSearch 为核心的技术栈，包括 Beats、"),s("strong",[t._v("Logstash")]),t._v("、Kibana、"),s("strong",[t._v("ElasticSerach")]),t._v("，被广泛应用在日志数据分析、实时监控等领域")]),t._v(" "),s("img",{attrs:{src:a(862)}}),t._v(" "),s("p",[t._v("作为 ELK 的核心，Elasticsearch 是一个分布式搜索引擎（索引数据库），负责存储、搜索、分析数据。他采用 Netty 作为底层通信框架，来实现高效的 "),s("strong",[t._v("TCP 连接管理")]),t._v("和"),s("strong",[t._v("数据传输")]),t._v("，由 Lucene 提供搜索引擎的核心 API（Lucene 是 Apache 的毕业开源搜索引擎类库，基于 Java 开发）")]),t._v(" "),s("p",[t._v("Logstash 是一个流处理工具，它提供了大量插件，可用它自己的 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/logstash/current/filter-plugins.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Filter"),s("OutboundLink")],1),t._v(" 帮助你解析，丰富，转换和缓冲来自各种来源的数据，最后，它可以把自己的数据输出到各种需要的数据储存地，这其中包括 Elasticsearch")]),t._v(" "),s("ul",[s("li",[t._v("安恒这类安全类的公司做开发似乎用的比较多")])]),t._v(" "),s("p",[t._v("相比于 Lucene，ElasticSearch 具备下列优点")]),t._v(" "),s("ol",[s("li",[t._v("支持分布式，可水平扩展")]),t._v(" "),s("li",[t._v("提供 Restful 接口，可通过任意语言以 HTTP 方式调用")])]),t._v(" "),s("p",[t._v("ES 的核心在于倒排索引（相对于关系型数据库的正向索引而言），在模糊搜索时速度很快（依仗于 BM25 算法）")]),t._v(" "),s("p",[t._v("ES 的核心评分算法：一开始是 TF-IDF 算法")]),t._v(" "),s("img",{attrs:{src:a(863)}}),t._v(" "),s("p",[t._v("后来是 BM25 算法（在 5.1 版本后），没错，就是这篇用到的 - "),s("a",{attrs:{href:"https://northboat.github.io/pages/7bc025/#jpbc-%E5%9F%BA%E7%A1%80",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("基于 BM25 算法的可搜索加密系统 | Arkrypto Wiki"),s("OutboundLink")],1)]),t._v(" "),s("img",{attrs:{src:a(864)}}),t._v(" "),s("p",[t._v("与 MySQL 的对比")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("MySQL")])]),t._v(" "),s("th",[s("strong",[t._v("Elasticsearch")])]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Table")]),t._v(" "),s("td",[t._v("Index")]),t._v(" "),s("td",[t._v("索引（index），就是文档的集合，类似数据库的表(table)")])]),t._v(" "),s("tr",[s("td",[t._v("Row")]),t._v(" "),s("td",[t._v("Document")]),t._v(" "),s("td",[t._v("文档（Document），就是一条条的数据，类似数据库中的行（Row），文档都是 JSON 格式")])]),t._v(" "),s("tr",[s("td",[t._v("Column")]),t._v(" "),s("td",[t._v("Field")]),t._v(" "),s("td",[t._v("字段（Field），就是 JSON 文档中的字段，类似数据库中的列（Column）")])]),t._v(" "),s("tr",[s("td",[t._v("Schema")]),t._v(" "),s("td",[t._v("Mapping")]),t._v(" "),s("td",[t._v("Mapping（映射）是索引中文档的约束，例如字段类型约束。类似数据库的表结构（Schema）")])]),t._v(" "),s("tr",[s("td",[t._v("SQL")]),t._v(" "),s("td",[t._v("DSL")]),t._v(" "),s("td",[t._v("DSL 是 elasticsearch 提供的JSON风格的请求语句，用来操作 elasticsearch，实现CRUD")])])])]),t._v(" "),s("p",[t._v("像操纵 MySQL 一样，我们本质上都是使用 DSL 对 ES 进行 CRUD，无论是命令行还是调用 RestAPI，都是在完成这一工作")]),t._v(" "),s("h3",{attrs:{id:"dsl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dsl"}},[t._v("#")]),t._v(" DSL")]),t._v(" "),s("p",[t._v("类似于关系型数据库的 SQL，采用更为简单的 Json 格式")]),t._v(" "),s("p",[t._v("1️⃣ POST 命令新增文档，全部是键值对的形式进行添加")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("POST /northboat/_doc/"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"info"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"真相只有一个！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zy@itcast.cn"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"firstName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"柯"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lastName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"南"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("2️⃣ GET 查询文档")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("GET /northboat/_doc/"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("3️⃣ DELETE 删除文档")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("# 根据id删除数据\nDELETE /northboat/_doc/"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("4️⃣ PUT 全量修改文档（覆盖修改），实际上是先通过 id DELETE 掉原有文档，再 POST 一个相同 id 的文档")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("PUT /northboat/_doc/"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"info"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"西电凯÷CIA实验室"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zy@itcast.cn"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"firstName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"云"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lastName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"赵"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("5️⃣ POST 增量修改，只修改指定 id 匹配的文档中的"),s("strong",[t._v("部分字段")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("POST /northboat/_doc/"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"doc"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"northboat@163.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"索引库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引库"}},[t._v("#")]),t._v(" 索引库")]),t._v(" "),s("p",[t._v("在现实场景中，我们不可能去手动创建索引库，应该是根据每个文档的"),s("strong",[t._v("关键词")]),t._v("去创建对应的 json，那么这一过程一定是需要用到"),s("strong",[t._v("分词器")]),t._v("对整个文档进行关键词的分割")]),t._v(" "),s("p",[t._v("我们说，创建索引库，最关键的是 mapping 映射（构建 json 映射关系），而 mapping 映射要考虑的信息包括：")]),t._v(" "),s("ul",[s("li",[t._v("字段名")]),t._v(" "),s("li",[t._v("字段数据类型")]),t._v(" "),s("li",[t._v("是否参与搜索")]),t._v(" "),s("li",[t._v("是否需要分词")]),t._v(" "),s("li",[t._v("如果分词，分词器是什么")])]),t._v(" "),s("p",[t._v("在设计时")]),t._v(" "),s("ol",[s("li",[t._v("依照关系型数据库的字段设计方式进行设计")]),t._v(" "),s("li",[t._v("我们只对需要进行搜索的字段进行映射，比如主键肯定需要，而图片地址就无需参与")]),t._v(" "),s("li",[t._v("分词器方面，可以统一使用 IK_MAX_WORD")])]),t._v(" "),s("p",[t._v("一个 Hotel 酒店索引库示例，通过 PUT 命令创建")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("PUT /hotel\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"analyzer"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_max_word"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"copy_to"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"price"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"score"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"brand"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"copy_to"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"city"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"copy_to"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"starName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"business"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"location"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"geo_point"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pic"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"all"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"analyzer"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_max_word"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("几个特殊字段说明")]),t._v(" "),s("ul",[s("li",[t._v("location：地理坐标，里面包含精度、纬度")]),t._v(" "),s("li",[t._v("all：一个组合字段，其目的是将多字段的值 利用copy_to合并，提供给用户搜索")])]),t._v(" "),s("p",[t._v("location 地理坐标")]),t._v(" "),s("img",{attrs:{src:a(865)}}),t._v(" "),s("p",[t._v("copy_to 属性：将当前字段拷贝到指定字段")]),t._v(" "),s("img",{attrs:{src:a(866)}}),t._v(" "),s("p",[t._v("当然了，在实际生产中，我们会使用 Java API 来操作 ES 数据库："),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/client/index.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Elasticsearch Clients | Elastic"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("引入 Java HighLevel Rest Client依赖")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.elasticsearch.client"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("elasticsearch-rest-high-level-client"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("因为 SpringBoot 默认的 ES 版本是 7.6.2，所以我们需要覆盖默认的 ES 版本与自己的版本一致")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("java.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.8"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("java.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("elasticsearch.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("7.12.1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("elasticsearch.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("初始化 RestHighLevelClient 并注入 Bean")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestHighLevelClient")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestHighLevelClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://192.168.150.101:9200"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这里为了单元测试方便，我们创建一个测试类 HotelIndexTest，然后将初始化的代码编写在 @BeforeEach 方法中")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itcast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hotel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpHost")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elasticsearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestHighLevelClient")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jupiter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AfterEach")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jupiter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeforeEach")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jupiter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotelIndexTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestHighLevelClient")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BeforeEach")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestHighLevelClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://192.168.150.101:9200"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AfterEach")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tearDown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("CRUD 文档库 Hotel，本质上就是"),s("strong",[t._v("拼接字符串和 HTTP 请求")]),t._v("，向 ES 数据库"),s("strong",[t._v("发送 DSL 命令")]),t._v("，而后 ES 返回执行结果的过程")]),t._v(" "),s("h3",{attrs:{id:"文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[t._v("#")]),t._v(" 文档")]),t._v(" "),s("p",[t._v("文档之于索引库，就像数据表之于数据库，在实际使用中，基本上是先读取 MySQL 数据表中的数据，然后再存进 ES 的文档中")]),t._v(" "),s("p",[t._v("文档操作的基本步骤：根据发送请求那步的第一个参数，发过来判断需要创建什么"),s("code",[t._v("XXXRequest")])]),t._v(" "),s("ol",[s("li",[t._v("初始化 RestHighLevelClient")]),t._v(" "),s("li",[t._v("创建"),s("code",[t._v("XXXRequest")]),t._v("，XXX 可以是 Index、Get、Update、Delete、Bulk")]),t._v(" "),s("li",[t._v("准备参数（Index、Update、Bulk时需要）")]),t._v(" "),s("li",[t._v("发送请求：调用"),s("code",[t._v("RestHighLevelClient.xxx()")]),t._v("方法，xxx 是 index、get、update、delete、bulk")]),t._v(" "),s("li",[t._v("解析结果（Get 时需要）")])]),t._v(" "),s("p",[t._v("ES 的查询是一门功夫，类似于 SQL 的编写，可以有很多查询条件和复合嵌套规则")])])}),[],!1,null,null,null);s.default=e.exports},861:function(t,s,a){t.exports=a.p+"assets/img/2729274-20230205163347683-397320818.b336006b.png"},862:function(t,s,a){t.exports=a.p+"assets/img/2729274-20230205171722024-1222796164.ed917391.png"},863:function(t,s,a){t.exports=a.p+"assets/img/2729274-20230205173433826-368331600.e2c25075.png"},864:function(t,s,a){t.exports=a.p+"assets/img/2729274-20230205173438720-1124832591.60253107.png"},865:function(t,s,a){t.exports=a.p+"assets/img/2729274-20230205172124085-626335563.d46fdaf8.png"},866:function(t,s,a){t.exports=a.p+"assets/img/2729274-20230205172128097-289087887.b792eb38.png"}}]);